---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: adguardhome
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: csi-driver-nfs
      namespace: kube-system
  values:
    controllers:
      adguardhome:
        type: statefulset
        statefulset:
          volumeClaimTemplates:
            - name: data
              storageClass: nfs-csi
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
              advancedMounts:
                app:
                  - path: /opt/adguardhome/conf
                    subPath: conf
                  - path: /opt/adguardhome/work
                    subPath: work
                # unbound:
                #   - path: /opt/unbound/data
                #     subPath: unbound
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: adguard/adguardhome
              tag: v0.108.0-b.62
            env:
              HTTP_PORT: &port 3000 # was 8080
              TZ: "${TIMEZONE}"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: adguardhome
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: adguardhome
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: traefik-internal                                                                  # Decides if it's exposed to the internet (traefik-external vs traefik-internal)
        annotations:
          # cert-manager.io/cluster-issuer: letsencrypt-production                                   # Used in non-wildcard configuration
          # external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"                       # creates CNAME in Cloudflare, only useful if using traefik-external
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "network-chain-no-auth-restrict-networks@kubernetescrd"
        hosts:
          - host: &host "adguardhome.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http # means port 3000 in this case
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls" # "echo-server-production-tls"
