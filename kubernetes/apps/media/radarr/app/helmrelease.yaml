---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  releaseName: radarr
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: csi-driver-nfs
      namespace: kube-system
  values:
    controllers:
      main:
        type: deployment
        strategy: Recreate
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr
              pullPolicy: IfNotPresent
              tag: 5.17.2.9580
            env:
              - name: TZ
                value: "America/Detroit"
              - name: RADARR__INSTANCE_NAME
                value: "Radarr"
              - name: RADARR__PORT
                value: "7878"
              - name: RADARR__APPLICATION_URL
                value: "https://radarr.${SECRET_DOMAIN}"
              - name: RADARR__LOG_LEVEL
                value: "info"
    service:
      main:
        controller: main
        ports:
          http:
            port: 7878
    ingress:
      main:
        enabled: true
        className: traefik-internal
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "network-chain-no-auth-restrict-networks@kubernetescrd"
        hosts:
          - host: "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - "radarr.${SECRET_DOMAIN}"
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        enabled: true
        storageClass: nfs-csi     # Dynamic PVC in /kubernetes/appdata
        accessMode: ReadWriteOnce
        size: 2Gi
      media:
        enabled: true
        existingClaim: nfs-media-pvc   # Uses static PVC for /kubernetes/media

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: "Always"
